<head>
    <title>Taskfly</title>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Shadows+Into+Light' rel='stylesheet' type='text/css'>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <link href='../styles/style.css' rel='stylesheet' type='text/css'>
    <link rel="shortcut icon" href="../styles/favicon.ico" type="image/x-icon">
    <link rel="icon" href="../styles/favicon.ico" type="image/x-icon">
</head>
<body>
    <div class="head">
        <span class="logo"></span><h2>Taskfly</h2>
        <button id='logout'>Log Out</button>
    </div>
    <div id='main-wrapper'>
        <h1>Where are you?</h1>
        <form id='addressForm'>
            <div id="placeError" class="error">* You must enter a valid location</div>
            <input type="text" id="address" placeholder='Enter your current address'>
        </form>
        <h1>What do you have to get done?</h1>
        <form id='taskForm'>
            <span id="taskError" class="error">* Please enter at least one task</span></br>
            <input type="text" class="task">
            <input type="text" class="task">
            <input type="text" class="task">
        </form>
        <button id="addTask"> + Add another task</button>
        <form id='minimalForm'>
        	</br>
            <div class='minTags'>Take me to the fewest number of places:</div>
            <input type='radio' name='minimal' class='minimal' id='min' checked="checked">
            <div class='minTags'>Take me to the places closest to me:</div>
            <input type='radio' name='minimal' class='minimal' value='close'>
        </form>
        <button id='submitBtn'>Submit List</button>
    </div>
</body>

<script>
    var todoList = [];
    // boolean indicating whether to use minimal businesses metric or shortest distance metric
    var useMinimalMetric = true;
    // latitude and longitude of place that user enters
    var lat = 0;
    var lng = 0;

	$('#submitBtn').click(function() {

        var err = false;
        $(".error").hide();

        // get all the data in the task inputs and make a list out of them
        $('.task').each(function() {
            var task = $(this).val().trim();
            if(task !== "") {
                todoList[todoList.length] = task;
            }
        });

        if(todoList.length == 0) {
            $("#taskError").show();
            err = true;

        }

        // get the latitude and longitude of the address the user entered
        var place = autocomplete.getPlace();
        if(place !== undefined) {
            lat = place.geometry.location.lat();
            console.log("lat: " + lat);
            lng = place.geometry.location.lng();
            console.log("lng: " + lng);
        }
        else {
            $("#placeError").show();
            err = true;
        }

        useMinimalMetric = document.getElementById('min').checked;
        console.log(useMinimalMetric);

        // only post if there aren't any errors
        if(!err){
            // pass this list into the post request
    	 	$.post('/processList', {list:todoList, latitude:lat, longitude:lng, useMinimalMetric:useMinimalMetric}, 
    	 		function(responseObj) {
    	    	  var idsToItems = responseObj.idsToItems;
    	    	  var idsToBusinesses = responseObj.idsToBusinesses;
    	    	  var unsatisfiedItems = responseObj.unsatisfiedItems;

    			  var url = '/displayResults/' + JSON.stringify(idsToItems) + '/' + JSON.stringify(idsToBusinesses)
    			  	+ '/' + JSON.stringify(unsatisfiedItems) + '/' + lat + '/' + lng;
    	    	  window.location.replace(url);
            });
         }
	});


    $('#addTask').click(function() {
        $('#taskForm').append("<input type='text' class='task'></br>");
    });


    $(document).ready(function() {
        var input = document.getElementById('address');
        var options = {
            types: ['address']
        };

        autocomplete = new google.maps.places.Autocomplete(input, options);
        
        
		$('#logout').click(function() {
			console.log('logout button clicked');
			$.post("/logout", function(res) {
		 		window.location.replace("/login");
		 	});
		});
    });
</script>